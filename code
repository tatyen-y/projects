import pandas as pd
import numpy as np

# Предположим, что у вас уже есть DataFrame data с колонками 'region', 'distance_to_center' и 'price'

def remove_outliers(df):
    removed_counts = {}

    def filter_condition(row):
        region = row['region']
        distance = row['distance_to_center']
        
        # Устанавливаем коэффициенты в зависимости от региона
        if region == 'Москва':
            if distance <= 5:
                multiplier = 1.5
            elif distance <= 10:
                multiplier = 1.0
            elif distance <= 15:
                multiplier = 0.7
            else:
                multiplier = 0.4
        elif region == 'Санкт-Петербург':
            if distance <= 5:
                multiplier = 1.3
            elif distance <= 10:
                multiplier = 0.9
            elif distance <= 15:
                multiplier = 0.6
            else:
                multiplier = 0.3
        else:  # Для остальных городов
            if distance <= 5:
                multiplier = 1.2
            elif distance <= 10:
                multiplier = 0.8
            elif distance <= 15:
                multiplier = 0.5
            else:
                multiplier = 0.2
        
        # Вычисляем квартильные значения и IQR для текущего региона
        region_data = df[df['region'] == region]
        Q1 = region_data['price'].quantile(0.25)
        Q3 = region_data['price'].quantile(0.75)
        IQR = Q3 - Q1
        
        # Вычисляем границы для удаления аномалий
        lower_bound = Q1 - (multiplier * IQR)
        upper_bound = Q3 + (multiplier * IQR)
        
        return lower_bound <= row['price'] <= upper_bound
    
    # Применяем фильтр к данным и считаем количество удаленных строк по каждому региону
    for region in df['region'].unique():
        region_df = df[df['region'] == region]
        initial_count = len(region_df)
        filtered_region_df = region_df[region_df.apply(filter_condition, axis=1)]
        final_count = len(filtered_region_df)
        
        removed_counts[region] = initial_count - final_count
    
    # Применяем фильтр ко всему датасету
    filtered_df = df[df.apply(filter_condition, axis=1)]
    
    return filtered_df, removed_counts

# Применяем функцию ко всему датасету
filtered_data, removed_counts = remove_outliers(data)

# Выводим количество удаленных строк для каждого региона
for region, count in removed_counts.items():
    print(f"Регион: {region}, удалено строк: {count}")

# Вы можете сохранить или использовать отфильтрованные данные дальше
print(filtered_data.head())
