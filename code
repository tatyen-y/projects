import requests
import json

# Ваш токен доступа (уже получен и сохранен в переменной giga_token)
# Пример: giga_token = 'полученный_токен_здесь'

# История диалога для контекста
conversation_history = [{
    'role': 'system',
    'content': 'Вы выступаете в роли эксперта по географии. Ваша задача — на основе названия города выбрать наиболее подходящий регион из предоставленного списка регионов. Вам нужно учитывать семантическое значение названия города и правильно сопоставить его с соответствующим регионом.'
}]

# Список регионов
regions_list = [
    'Алматы', 'Акмолинская область', 'Шымкент', 
    'Карагандинская область', 'Ставропольский край', 'Москва'
]

def get_chat_completion(auth_token: str, city_name: str, regions_list: list, conversation_history=None):
    """
    Отправляет POST-запрос к API чата для получения ответа от модели GigaChat в рамках диалога.

    Параметры:
    - auth_token (str): токен авторизации.
    - city_name (str): Название города, для которого нужно найти соответствующий регион.
    - regions_list (list): Список регионов для сопоставления.
    - conversation_history (list): История диалога в виде списка сообщений (опционально).

    Возвращает:
    - response_content (str): Ответ от GigaChat, текст.
    - conversation_history (list): Обновленная история диалога.
    """
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"

    if conversation_history is None:
        conversation_history = []

    # Формирование текста запроса
    regions_str = ", ".join(regions_list)
    user_message = f"Город: {city_name}\nРегионы: {regions_str}\nВыберите наиболее подходящий регион для города."

    # Добавление сообщения пользователя в историю диалога
    conversation_history.append({
        "role": "user",
        "content": user_message
    })

    # Формирование payload для запроса
    payload = json.dumps({
        "model": "GigaChat:latest",
        "messages": conversation_history,
        "temperature": 0.7,
        "top_p": 0.9,
        "n": 1,
        "stream": False,
        "repetition_penalty": 1,
        "update_interval": 0
    })

    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': f'Bearer {auth_token}'
    }

    try:
        # Отправка POST-запроса
        response = requests.post(url, headers=headers, data=payload, verify=False)
        response.raise_for_status()
        response_data = response.json()

        # Извлечение и возврат ответа
        response_content = response_data['choices'][0]['message']['content'].strip()

        # Добавление ответа ассистента в историю диалога
        conversation_history.append({
            "role": "assistant",
            "content": response_content
        })

        return response_content, conversation_history
    except requests.RequestException as e:
        print(f"Произошла ошибка: {str(e)}")
        return None, conversation_history

# Тестовая строка: "г. Чехов, Московская область"
city_name = "г. Чехов, Московская область"

# Получаем ответ от GigaChat
region, updated_history = get_chat_completion(giga_token, city_name, regions_list, conversation_history)

# Выводим результат
print("Наиболее подходящий регион:", region)
